let fib_cache = [0,1];
fn fib(n) {
    if (n < 0) {
        return 0;
    }
    let i = fib_cache.len();
    while (i <= n) {
        fib_cache[i] = fib_cache[i-1] + fib_cache[i-2];
        i += 1;
    }
    return fib_cache[n];
}

fn fib_rec(n) {
    if (n <= 0) {
        return 0;
    } else if (n == 1) {
        return 1;
    }
    return fib_rec(n-1) + fib_rec(n-2);
}

assert(fib(0) == 0);
assert(fib(1) == 1);
assert(fib(2) == 1);
assert(fib(10) == 55);
assert(fib_rec(0) == 0);
assert(fib_rec(1) == 1);
assert(fib_rec(2) == 1);
assert(fib_rec(10) == 55);